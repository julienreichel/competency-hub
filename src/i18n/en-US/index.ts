export default {
  dashboard: {
    welcome: 'Welcome back, {name}!',
    defaultName: 'there',
    subtitle: {
      student: 'Here is your learning snapshot.',
      parent: "Monitor your children's progress at a glance.",
      educator: 'Track your classroom progress.',
      admin: 'Platform-wide overview.',
    },
    recentActivity: 'Recent Activity',
    noRecentActivity: 'No recent activity yet.',
    quickActions: 'Quick Actions',
    updatedOn: 'Updated on {date}',
    updatedUnknown: 'Last update unknown',
    activityPercent: '{percent}% complete',
    activityDefaultSubtitle: 'Keep up the great work!',
    labels: {
      unknownSub: 'Sub-competency',
      unknownActor: 'Learner',
    },
    cards: {
      totalCompetencies: 'Total competencies',
      validated: 'Validated',
      inProgress: 'In progress',
      pendingValidation: 'Pending validation',
      locked: 'Locked',
      recommended: '{count} recommended',
      totalChildren: 'Children',
      totalStudents: 'Students',
      activeCompetencies: 'Active competencies',
      pendingReviews: 'Pending reviews',
      totalUsers: 'Users',
      adminStudents: 'Students',
      adminEducators: 'Educators',
      adminParents: 'Parents',
      adminAdmins: '{count} admins',
    },
    actions: {
      myCompetencies: 'My competencies',
      viewAssessments: 'View assessments',
      viewReports: 'View reports',
      viewChildren: 'View children',
      manageStudents: 'Manage students',
      manageUsers: 'Manage users',
      manageDomains: 'Manage domains',
    },
  },

  // Common terms
  common: {
    view: 'View',
    edit: 'Edit',
    delete: 'Delete',
    cancel: 'Cancel',
    submit: 'Submit',
    save: 'Save',
    user: 'User',
    users: 'Users',
    profile: 'Profile',
    role: 'Role',
    status: 'Status',
    email: 'Email',
    name: 'Name',
    firstName: 'First Name',
    lastName: 'Last Name',
    username: 'Username',
    close: 'Close',
    actions: 'Actions',
    refresh: 'Refresh',
    create: 'Create',
    clear: 'Clear',
    yes: 'Yes',
    no: 'No',
  },

  resource: {
    openFile: 'Open file',
  },

  // Admin section
  admin: {
    userManagement: 'User Management',
    addUser: 'Add User',
    addNewUser: 'Add New User',
    bulkImport: 'Bulk Import',
    searchUsers: 'Search users...',
    resetPassword: 'Reset Password',
    activate: 'Activate',
    deactivate: 'Deactivate',
    changeRole: 'Change Role',
    changeRolePrompt: 'Select the new role for the selected users ({count}).',
    bulkRoleSuccess: 'Updated role for {count} user(s).',
    bulkRolePartial: 'Updated {success} user(s); {failed} failed.',
    bulkRoleNoChanges: 'All selected users already have this role.',
    bulkRoleError: 'Could not update the selected users. Please try again.',
    usernameHint: 'Leave blank to auto-generate',
    contactInfo: 'Contact Information',
    userName: 'Full Name',
    avatar: {
      clear: 'Clear',
      regenerate: 'Regenerate',
      random: 'Random',
    },
    editUser: 'Edit User',
    avatarPickerTitle: 'Choose an avatar',
    userDetails: 'User Details',
    lastActive: 'Last Active',
    memberSince: 'Member Since',
    stats: {
      totalUsers: 'Total Users',
      students: 'Students',
      newThisMonth: 'New This Month',
      onlineNow: 'Online Now',
    },
    userDetailsLoadFailed: 'Failed to load full user details. Please try again.',
  },

  profile: {
    uploadPhoto: 'Upload Photo',
    picture: 'Profile Photo',
    uploadInstructions: 'Drag and Drop an image to replace your profile picture.',
    uploadError: 'Could not upload the photo. Please try again.',
  },

  educator: {
    assignLabel: 'Add to my students',
    unassignLabel: 'Remove from my students',
    parents: 'Parents',
    educators: 'Educators',
    myStudentsTitle: 'My Students',
    searchStudents: 'Search students...',
    myStudentsTab: 'My Students',
    allStudentsTab: 'All Students',
    noMyStudents: 'You have not assigned any students yet.',
    noStudentsFound: 'No students match your search.',
    missingEducatorId: 'We could not identify your educator account. Please sign in again.',
    assignSuccess: 'Student added to your list.',
    unassignSuccess: 'Student removed from your list.',
    refreshSuccess: 'Student list refreshed.',
    viewCompetencies: 'View competencies',
    assignError: 'Could not assign the student. Please try again.',
    unassignError: 'Could not remove the student. Please try again.',
    assignParent: 'Assign Parent',
    parentAssignSuccess: 'Parent linked to student.',
    assignParentError: 'Could not assign the parent. Please try again.',
    removeParentError: 'Could not remove the parent. Please try again.',
    parentRemoveSuccess: 'Parent removed from student.',
    parentSelectTitle: 'Assign Parent',
    parentSelectDescription: 'Choose a parent to link to this student.',
    parentSelectPlaceholder: 'Select a parent',
    assignParentConfirm: 'Link Parent',
    assignEducator: 'Assign Educator',
    assignEducatorConfirm: 'Link Educator',
    assignEducatorSuccess: 'Educator linked to student.',
    assignEducatorError: 'Could not assign the educator. Please try again.',
    removeEducatorSuccess: 'Educator removed from student.',
    removeEducatorError: 'Could not remove the educator. Please try again.',
    educatorSelectTitle: 'Assign Educator',
    educatorSelectDescription: 'Choose an educator to link to this student.',
    educatorSelectPlaceholder: 'Select an educator',
    noEducatorsAssigned: 'No educators assigned yet.',
    noParentsAssigned: 'No parents assigned yet.',
    assignSelf: 'Assign myself',
    unassignSelf: 'Unassign myself',
  },

  domains: {
    title: 'Domains',
    subtitle: 'Organise competencies by domain',
    addDomain: 'Add Domain',
    createTitle: 'Create Domain',
    editTitle: 'Edit Domain',
    loading: 'Loading domains...',
    emptyState: 'No domains found yet. Create the first one to get started.',
    messages: {
      created: 'Domain created successfully.',
      updated: 'Domain updated successfully.',
      deleted: 'Domain deleted successfully.',
      deleteConfirm: 'Delete the domain "{name}"? This action cannot be undone.',
      error: 'Something went wrong. Please try again.',
    },
    fields: {
      name: 'Domain name',
      color: 'Color (optional)',
    },
    actions: {
      create: 'Create',
      save: 'Save changes',
    },
    competencyCount: 'None | 1 competency | {count} competencies',
  },

  resources: {
    title: 'Resources',
    addResource: 'Add Resource',
    addTitle: 'Add Resource',
    editTitle: 'Edit Resource',
    emptyState: 'No resources found',
    actions: {
      create: 'Create resource',
      save: 'Save changes',
    },
    fields: {
      type: 'Type',
      title: 'Title',
      description: 'Description',
      url: 'URL',
      upload: 'Upload file',
      helperUser: 'Helper User',
    },
  },

  competencies: {
    title: 'Competencies',

    addCompetency: 'Add Competency',
    addSubCompetency: 'Add sub-competency',
    createTitle: 'Create Competency',
    newSubCompetency: 'New sub-competency',
    name: 'Competency name',
    fields: {
      name: 'Competency name',
      description: 'Description',
      objectives: 'Objectives',
    },
    actions: {
      create: 'Create',
      save: 'Save changes',
    },
    loading: 'Loading competencies...',
    emptyState: 'No competencies in this domain yet.',
    noDescription: 'No description provided.',
    searchPlaceholder: 'Search competencies...',
    viewingFor: 'Viewing competencies for {name}',
    summary: {
      total: 'Total sub-competencies',
      validated: 'Validated',
      inProgress: 'In progress',
      pending: 'Pending validation',
      locked: 'Locked',
      notStarted: 'Not started',
    },
    editor: {
      breadcrumb: 'Competency editor',
      loading: 'Loading competency...',
      tabs: {
        details: 'Details',
        stages: 'Stages',
        resources: 'Resources',
      },
      messages: {
        notFound: 'Competency not found.',
        loadError: 'Could not load the competency. Please try again.',
        saveError: 'Could not save the competency. Please try again.',
        saved: 'Competency updated successfully.',
      },
    },
    messages: {
      created: 'Competency created successfully.',
      deleted: 'Competency deleted successfully.',
      deleteConfirm: 'Delete the competency "{name}"? This action cannot be undone.',
      error: 'Could not save the competency. Please try again.',
      loadError: 'Could not load domain details. Please try again.',
    },
    subCompetencies: 'Sub-Competencies',
  },
  subCompetencies: {
    title: 'Sub-Competencies',
    loading: 'Loading sub-competency...',
    newSubCompetency: 'New sub-competency',
    name: 'Sub-competency name',
    emptyState: 'No sub-competencies found',
    noDescription: 'No description provided',
    studentProgress: 'Student Progress',
    studentProgressHint: 'Select one or more students to manage their access.',
    status: 'Status',
    percent: 'Percent',
    locked: 'Locked',
    recommended: 'Recommended',
    unlockAction: 'Unlock',
    recommendAction: 'Recommend',
    lockAction: 'Lock',
    validateAction: 'Validate',
    pendingValidationAction: 'I think I acquired this',
    unlockSuccess: 'Student access unlocked.',
    recommendSuccess: 'Sub-competency recommended to the selected students.',
    lockSuccess: 'Student access locked.',
    validateSuccess: 'Student marked as validated.',
    pendingValidationSuccess: 'Request sent for validation.',
    progressUpdateError: 'Could not update student progress. Please try again.',
  },

  progressStatus: {
    NotStarted: 'Not started',
    InProgress: 'In progress',
    PendingValidation: 'Pending validation',
    Validated: 'Validated',
    Locked: 'Locked',
  },

  // Validation messages
  validation: {
    required: 'This field is required',
    emailRequired: 'Email is required',
    emailInvalid: 'Please enter a valid email address',
    nameRequired: 'Name is required',
    firstNameRequired: 'First name is required',
    lastNameRequired: 'Last name is required',
    roleRequired: 'Role is required',
  },

  // Login and authentication
  login: {
    welcomeBack: 'Welcome Back',
    enterCredentials: 'Enter your credentials to continue',
    signIn: 'Sign In',
    accessDashboard: 'Access your competency dashboard',
    createAccount: 'Create Account',
    joinPlatform: 'Join the competency learning platform',
    termsAndPrivacy: 'By signing in, you agree to our Terms of Service and Privacy Policy',
    success: 'Login successful',
    signedIn: 'You are now signed in to Competency Hub.',
  },
};
